<!-- 
Sign up page, pretty much the same as login.
-->
{% extends 'base.jinja' %}


{% block content %} 
    <h1>Sign Up</h1>
    <p id="message" style="font-size: 14px;
                        color: rgb(37, 21, 219);
                        text-transform: uppercase;">
    Username and password must be at least 8 characters long and cannot contain '<', '>', '&', '/', ';', or '\'.</p>
    <p>Username</p>
    <input id="username" oninput="sanitize()"/>
    <p>Password</p>
    <input id="password" type="password" oninput="sanitize()"/>
    <button id="register_button" onclick="signup()" disabled>Sign up</button>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js" integrity="sha512-E8QSvWZ0eCLGk4km3hxSsNmGWbLtSCSUcewDQPQWZF6pEU8GlT8a5fF32wOl1i8ftdMhssTrF/OhyGWwonTcXA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        //var submitButton = document.getElementById("register_button");
        //submitButton.disabled = false;
        function sanitize() {
            
            var username = document.getElementById("username");
            var password = document.getElementById("password");

            var sanitized = username.value.replace(/[<>&\/;\\]/g, '');
            username.value = sanitized;
            var sanitized_p = password.value.replace(/[<>&\/;\\]/g, '');
            password.value = sanitized_p;

            var username = document.getElementById("username").value;
            var password = document.getElementById("password").value;
            var submitButton = document.getElementById("register_button");
            submitButton.disabled = ((username.length < 8) || (password.length < 8));
            
        }


         function isValidURL(string) {
            if (string.length == 0) {
                return false;
            }
            if (string[0] == "/") {
                return true;
            }
            return false;
        }

        async function hash(pwd) {
            let enc_p = new TextEncoder().encode(pwd);
            let hash = await crypto.subtle.digest("SHA-256", enc_p);
            let arr = Array.from(new Uint8Array(hash));
            let hex = arr.map((b) => b.toString(16).padStart(2, "0"))
            .join("");
            return hex;
        }

        // this function is identical to login(), see login.jinja
        async function signup() {
            let pwd = $("#password").val();

            let salt = CryptoJS.enc.Utf8.parse(password);
            let salt_string = CryptoJS.enc.Utf8.stringify(salt);
            await make_key(salt_string, password);

            hash(pwd).then((d) => {
                let signupURL = "{{ url_for('signup_user') }}";

                axios.post(signupURL, {
                    username: $("#username").val(),
                    password: d
                }).then((res) => {
                    if (!isValidURL(res.data)) {
                        localStorage.removeItem('derivedKey');
                        alert(res.data);
                        return;
                    }
                    sessionStorage.setItem('session', $("#username").val());
                    window.open(res.data, "_self");
                     
                })               
            })            
        }
    </script>
{% endblock %}
